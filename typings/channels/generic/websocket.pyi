import typing as t

from ..consumer import AsyncConsumer, Message

class AsyncWebsocketConsumer(AsyncConsumer):
    async def websocket_connect(self, message: Message) -> None: ...
    async def connect(self) -> None: ...
    async def accept(self, subprotocol: str | None = None) -> None: ...
    async def websocket_receive(self, message: Message) -> None: ...
    async def receive(
        self, text_data: str | None = None, bytes_data: bytes | None = None
    ) -> None: ...
    async def send(
        self,
        text_data: str | None = None,
        bytes_data: bytes | None = None,
        close: bool = False,
    ) -> None: ...
    async def websocket_disconnect(self, message: Message) -> None: ...
    async def disconnect(self, code: int) -> None: ...

class AsyncJsonWebsocketConsumer(AsyncWebsocketConsumer):
    async def receive_json(self, content: Message, **kwargs: t.Any): ...
    async def send_json(self, content: Message, close: bool = False): ...
    @classmethod
    async def decode_json(cls, text_data: str) -> Message: ...
    @classmethod
    async def encode_json(cls, content: Message) -> str: ...
